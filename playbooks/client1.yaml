---
- hosts: client1
  gather_facts: no
  become: true

  tasks:
    - name: Install ifupdown2.
      apt:
        # autoremove: no # not required. If C(yes), remove unused dependency packages for all module states except I(build-dep). It can also be used as the only option.,Previous to version 2.4, autoclean was also an alias for autoremove, now it is its own separate command. See documentation for further information.
        # force: no # not required. Corresponds to the C(--force-yes) to I(apt-get) and implies C(allow_unauthenticated: yes),This option will disable checking both the packages' signatures and the certificates of the web servers they are downloaded from.,This option *is not* the equivalent of passing the C(-f) flag to I(apt-get) on the command line,**This is a destructive operation with the potential to destroy your system, and it should almost never be used.** Please also see C(man apt-get) for more information.
        # force_apt_get: no # not required. Force usage of apt-get instead of aptitude
        # update_cache: no # not required. Run the equivalent of C(apt-get update) before the operation. Can be run as part of the package installation or as a separate step.
        # only_upgrade: no # not required. Only upgrade a package if it is already installed.
        # deb: undefined # not required. Path to a .deb package on the remote machine.,If :// in the path, ansible will attempt to download deb before installing. (Version added 2.1)
        # cache_valid_time: 0 # not required. Update the apt cache if its older than the I(cache_valid_time). This option is set in seconds. As of Ansible 2.4, this sets I(update_cache=yes).
        # dpkg_options: force-confdef,force-confold # not required. Add dpkg options to apt command. Defaults to '-o "Dpkg::Options::=--force-confdef" -o "Dpkg::Options::=--force-confold"',Options should be supplied as comma separated list
        # upgrade: dist # not required. choices: dist;full;no;safe;yes. If yes or safe, performs an aptitude safe-upgrade.,If full, performs an aptitude full-upgrade.,If dist, performs an apt-get dist-upgrade.,Note: This does not upgrade a specific package, use state=latest for that.,Note: Since 2.4, apt-get is used as a fall-back if aptitude is not present.
        name: nmap # not required. A list of package names, like C(foo), or package specifier with version, like C(foo=1.0). Name wildcards (fnmatch) like C(apt*) and version wildcards like C(foo=1.0*) are also supported.
        # autoclean: no # not required. If C(yes), cleans the local repository of retrieved package files that can no longer be downloaded.
        # purge: no # not required. Will force purging of configuration files if the module state is set to I(absent).
        # allow_unauthenticated: no # not required. Ignore if packages cannot be authenticated. This is useful for bootstrapping environments that manage their own apt-key setup.,C(allow_unauthenticated) is only supported with state: I(install)/I(present)
        state: present # not required. choices: absent;build-dep;latest;present. Indicates the desired package state. C(latest) ensures that the latest version is installed. C(build-dep) ensures the package build dependencies are installed.
        # default_release: undefined # not required. Corresponds to the C(-t) option for I(apt) and sets pin priorities
        # install_recommends: undefined # not required. Corresponds to the C(--no-install-recommends) option for I(apt). C(yes) installs recommended packages.  C(no) does not install recommended packages. By default, Ansible will use the same defaults as the operating system. Suggested packages are never installed.